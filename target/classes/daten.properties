#Allgemeine Daten zum Bote App

#           Allgemeine Einstellungen

#       Haupt Stage(stackPane): min-height: 550; min-width: 380; prefWidth:680; prefHeight: 700
#       LeftPane(stackPane): min-width: 300
#       RightPane(stackPane): min-width: 380
#       Header + Bottom height: 50  IMG: 30 oder 25
#       Header + Bottom -fx-background-color: #FAFAFF; border: #E6E6FF;
#       style="-fx-background-color: #FAFAFF; -fx-border-color: #E6E6FF; -fx-border-style: none none solid none;"
#


#       Allgemeine Tabellen & Labels
#       border-color: #E6E6FF, text-color: #800000(maroon)

#       Allgemeine Message Cell Ausgabe
#       User Name #2b8cc4,
#       Überarbeitet, Zeit: #858585
#       Text: #000000(Black)


#       Bilder-Rund
#       Label-IMG css style="-fx-background-color: transparent; -fx-background-radius: 25; -fx-border-color: #FCFCFC; -fx-border-radius: 25;"

#       Bilder Allgemein
#       Links: https://icons8.de/icons/set/back
#           background(#FFFFFF00, transparent) 72x72px
#
#           Corner Bilder
#           i + x(close) = infocorner.png + closecorner.png u.s.w.
#           mit background: transparent, corner: #FFFFFF(background 5px über den runder rand)
#
#           IMG allgemein
#           72x72px, background: transparent(HEX: #FFFFFF00),
#           Color: Blau(Windows): #2b8cc4, Rot: #FF0000(RED), Green(#00FF00) Grau: #999999 oder #858585(meinsten)
#           Corner radius 8(72x72)
#           IMG klein für den pop-up-fenster 36x36 (Color gleich)

#
#           Hacken(Done)
#           36x36   Color: #606060 (nur den Grau + Grün + Blau)



#       Bild Anzeigen:
#            Image imgGrun = null;
#            imgGrun = new Image(getClass().getResourceAsStream("/static/img/doppeltgrun.png"), 15, 15, false, false);
#            ImageView imgHakenGrun = new ImageView(imgGrun);


#       Profil Bilder: befinden sich in den Project Bote/profilbild
#       HTTP Adresse:  http://localhost:8080/profilbild/03052022103644.png
#       ANBINDEN in BoteFX mit abruf von Bote/profilbild: freundeBild.setImage(new Image(ConfigService.FILE_HTTP+"profilbild/"+friend.getFreundebild()+".png"));


#       ********************** CONTROLLER ALLGEMEIN ***************************************

#       ***** FXML LADEN MIT CONTROLLER

#            @Autowired
#            private LayoutService layoutService;

#            //rechtePane = wo wird alles geladen
#            layoutService.setausgabeLayout(rechtePane);
#           // FXML Laden
#            MessageController messageController = (MessageController) layoutService.switchLayout(GlobalView.MESSAGE);
#           // Daten an MessageController senden (getter&setter)
#            messageController.setFreundColor(freundHintergrund);
#            messageController.setChatFreundeDaten(friend); // friend ist einen Array

#                               +
#           MessageController:(getter&setter)

#               private String freundToken;
#               public String getChatFreundeDaten() { return chatFreundeDaten; }
#               public void setChatFreundeDaten(Freunde chatFreundeDaten) {
#                       this.chatFreundeDaten = String.valueOf(chatFreundeDaten);
#                       // Token holen von dem Array
#                       freundToken = chatFreundeDaten.getFreundetoken();
#               }
#               // Ende MessageController

#
#       ***** FXML LADEN OHNE CONTROLLER + Node Auslesen(z.b.s label oder img)

#         // fxml Laden + alle Node holen
#        Parent loschenAktiv ;
#        Map<String, Object> idsObject;
#        try {
#            FXMLLoader loader = new FXMLLoader(getClass().getResource("/templates/fragments/messageweiterleiten.fxml"));
#            loschenAktiv = loader.load();
#            // Node in einem Object speichern
#            idsObject = loader.getNamespace();
#        } catch (IOException e) {
#            // Fehler anzeige functionier nicht, wird java.lang.NullPointerException ausgeführt
#            fehlerInfo("NO", "fxmlAktiv");
#            throw new RuntimeException(e);
#        }
#        // fxml ausgeben/anzeigen
#        messageLoschenPane.getChildren().add(loschenAktiv);

#       // Zahl ausgewählte Message zum Löschen anzeigen
#        Label loschenCount = (Label)idsObject.get("messageLoschenCount");
#        int checkCount = checkGruppe.size();
#        loschenCount.setText(String.valueOf(checkCount));
#               + METHODE STARTEN
#       // Click auf dem 'Weiterleiten'
#        HBox clickWeiterleiten = (HBox)idsObject.get("weiterHBox");
#        clickWeiterleiten.setOnMouseClicked(mouseEvent -> {
#            //System.out.println("Mesage Weiterleiten:" + checkGroup);
#            //messageWeiterleiten(checkGruppe);
#        });

#        ************************** ENDE CONTROLLER ***********************************



#       1. resources: login
#       a. home.fxml, maillogin.fxml, mailregister.fxml, mailsuccess.fxml = prefHeight="620.0" prefWidth="480.0"


#       HAUPT-PANE
#       <StackPane fx:id="hauptPane" alignment="TOP_LEFT" minHeight="550.0" minWidth="380.0" prefHeight="700.0" prefWidth="680.0"
#       xmlns="http://javafx.com/javafx/18" xmlns:fx="http://javafx.com/fxml/1" fx:controller="BoteFx.controller.ChatBoxController">


#       HEADER - CSS
#       height: 40px
#       style="-fx-background-color: #FAFAFF; -fx-border-style: solid none none none; -fx-border-color: #E6E6FF;
#       Text-Color: #000080


#       HEADER - CSS
#       height 45 (nur min-Height + prefHeight, keine max-Height)

#       <top>
#           <GridPane prefHeight="40.0" style="-fx-background-color: #FAFAFF; -fx-border-color: #E6E6FF; -fx-border-width: 0 0 1 0;" BorderPane.alignment="CENTER">
#              <columnConstraints>
#                  <ColumnConstraints halignment="LEFT" hgrow="SOMETIMES" maxWidth="80.0" minWidth="80.0" prefWidth="80.0" />
#                  <ColumnConstraints halignment="CENTER" hgrow="SOMETIMES" />
#                  <ColumnConstraints halignment="CENTER" hgrow="SOMETIMES" maxWidth="80.0" minWidth="80.0" prefWidth="80.0" />
#              </columnConstraints>
#              <rowConstraints>
#                <RowConstraints minHeight="45.0" prefHeight="45.0" valignment="CENTER" vgrow="SOMETIMES" />
#              </rowConstraints>
#           <.....
#       </top>



#       FOOTER - CSS
#
#       minWidth="300.0" prefHeight="50.0" prefWidth="300.0"
#       style="-fx-background-color: #FAFAFF; -fx-border-style: solid none none none; -fx-border-color: #E6E6FF;"


#       METHODEN
#       onKeyPressed...(Tastatur)
#       onMouseClicked (bei Bild)

#       Änderungen
#       1. MailSuccessController -> link ändern zum Setting
#           public void successZumSetting(ActionEvent event) {
#           viewService.switchTo(GlobalView.CHATBOX);
#           }


#       Später Löschen
#       1. MailRegisterController -> Zeile: 51 + 280 ( @FXML public String testerCode;)

#       ******************* Aufbaue Einen PopUps Fenster *****************************

#